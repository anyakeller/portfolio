{"version":3,"sources":["routes/Home.js","components/ImageCarousel.js","components/ProjectCard.js","components/ProjectSection.js","routes/Portfolio.js","components/Nav.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","className","style","maxWidth","whiteSpace","href","download","src","alt","ImageCarousel","imageFiles","imageFolderPath","image_folder_path","ProjectCard","projectData","project_name","image_files","dates","info","description","links","length","map","link","id","key","url","target","source","makeLinks","tags","tag","makeTags","ProjectSection","projects","project","Portfolio","Projects","Nav","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a54315c6.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Home(props) {\n  return (\n    <div\n      className=\"bg-gradient-light mx-auto shadow-sm px-4 py-4\"\n      style={{\n        maxWidth: \"690px\"\n      }}>\n      <div className=\"row\">\n        <div className=\"col-12 col-md-8 d-flex flex-column\">\n          <h1>\n            <small className=\"text-muted text-small mr-2 d-block d-sm-inline\">\n              a bit about\n            </small>\n            <span className=\"display-4\">Anya Keller</span>\n          </h1>\n          <p\n            className=\"lead pl-2 mt-2\"\n            style={{\n              whiteSpace: \"pre-line\"\n            }}>\n            Sometimes I make things.{\"\\n\"}\n            Sometimes I design things.{\"\\n\"}\n            Sometimes I write code.{\"\\n\"}\n            {\"\\n\"}\n            Mechanical Engineering Undergraduate at Boston University{\"\\n\"}\n            Full-stack website developer{\"\\n\"}\n          </p>\n          <span className=\"d-flex justify-content-around text-center\">\n            <a href=\"Anya%20Keller%20BU%20Resume.pdf\" download>\n              <i className=\"fa-solid fa-file-arrow-down\"></i> Resume\n            </a>\n            <a href=\"https://github.com/anyakeller\">\n              <i className=\"fa-brands fa-github\"></i> Github\n            </a>\n            <a href=\"https://www.linkedin.com/in/anya-keller-7914b297/\">\n              <i className=\"fa-brands fa-linkedin\"></i> Linkedin\n            </a>\n          </span>\n        </div>\n        <div className=\"col d-flex flex-column justify-content-center px-5 px-md-1 mt-3 mt-md-2\">\n          <img\n            className=\"d-block mx-auto img-fluid\"\n            src=\"lathework.jpg\"\n            alt=\"profile img\"\n          />\n          <small className=\"d-block text-center text-muted\">\n            This might be my face\n          </small>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\n\nfunction ImageCarousel(props) {\n  const imageFiles = props.imageFiles;\n  const imageFolderPath = props.image_folder_path;\n\n  function makeImages() {\n    if (imageFiles.length === 1) {\n      return (\n        <img\n          className=\"card-img\"\n          src={\"project-media/\" + imageFolderPath + imageFiles[0]}\n          alt=\"180x250 placeholder img\"\n        />\n      );\n    }\n    return (\n      <img\n        className=\"card-img\"\n        src={\"project-media/\" + imageFolderPath + imageFiles[0]}\n        alt=\"180x250 placeholder img\"\n      />\n    );\n    /*\n    return imageFiles.map((img_file, id) => {\n      return (\n        <div className=\"carousel-item\" key={id}>\n          <img\n            className={` d-block w-100 card-img ${id === 0 ? \"active\" : \"\"}`}\n            src={\"project-media/\" + imageFolderPath + img_file}\n            alt=\"180x250 placeholder img\"\n          />\n        </div>\n      );\n    });*/\n  }\n\n  function makeIndicators() {\n    return imageFiles.map((img_file, id) => {\n      return (\n        <li\n          data-target=\"#carouselExampleIndicators\"\n          data-slide-to={id}\n          class={`${id === 0 ? \"active\" : \"\"}`}\n          key={id}></li>\n      );\n    });\n  }\n\n  return (\n    <img\n      className=\"card-img\"\n      src={\"project-media/\" + imageFolderPath + imageFiles[0]}\n      alt=\"180x250 placeholder img\"\n    />\n  );\n}\n\nexport default ImageCarousel;\n","import React from \"react\";\nimport ImageCarousel from \"./ImageCarousel.js\";\n\nfunction ProjectCard(props) {\n  const projectData = props.projectData;\n\n  function makeLinks() {\n    if (projectData.links.length > 0) {\n      return projectData.links.map((link, id) => {\n        return (\n          <a className=\"d-block\" key={id} href={link.url} target=\"_blank\">\n            {link.source}\n          </a>\n        );\n      });\n    }\n  }\n\n  function makeTags() {\n    if (projectData.info.tags.length > 0) {\n      return projectData.info.tags.map((tag, id) => {\n        return (\n          <span className=\"badge badge-pill badge-dark mr-1\" key={id}>\n            {tag}\n          </span>\n        );\n      });\n    }\n  }\n  return (\n    <div className=\"card shadow\">\n      <h5 className=\"card-header\">{projectData.project_name}</h5>\n      <div className=\"card-body\">\n        <ImageCarousel imageFiles={projectData.image_files} image_folder_path={projectData.image_folder_path} />\n        <small className=\"text-muted\">{projectData.dates}</small>\n        <p className=\"card-text\">{projectData.info.description}</p>\n        {makeLinks()}\n      </div>\n      <div className=\"card-footer\">{makeTags()}</div>\n    </div>\n  );\n}\n\nexport default ProjectCard;\n","import React from \"react\";\nimport ProjectCard from \"./ProjectCard.js\";\n\nexport default function ProjectSection(props){\n  return props.projects.map((project, id) => {\n      return (<ProjectCard key={id} projectData={project}/>);\n    });\n}","import React from \"react\";\nimport Projects from \"./../projects.json\";\nimport ProjectSection from \"./../components/ProjectSection.js\";\n\nfunction Portfolio(props) {\n  return (<div>\n    <div className=\"row\">\n      <div className=\"col\">\n        <div className=\"bg-gradient-light mx-auto shadow px-4 py-4 clearfix\" style={{\n            maxWidth: \"690px\"\n          }}>\n          <div className=\"mb-3 mb-md-0\">\n            <h1>\n              <span className=\"display-4\">Projects</span>\n            </h1>\n            <p className=\"lead pl-2\" style={{\n                whiteSpace: \"pre-line\"\n              }}>\n              Some stuff I've built\n            </p>\n            <small className=\"text-muted float-right\">stuff</small>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div className=\"row my-4\">\n      <div className=\"col\">\n        <div className=\"card-columns\">\n          <ProjectSection projects={Projects}/>\n        </div>\n      </div>\n    </div>\n  </div>)\n}\n\nexport default Portfolio;\n","import React from \"react\";\n\nexport default function Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n      <a className=\"navbar-brand\" href=\"/portfolio\">\n        Anya Keller\n      </a>\n    </nav>\n  );\n}\n\n/*\n\n      <button\n        className=\"navbar-toggler hamburger collapsed hamburger--squeeze\"\n        data-target=\"#navbar-collapse-content\"\n        data-toggle=\"collapse\"\n        type=\"button\"\n        aria-controls=\"navbar-collapse-content\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\">\n        <span className=\"hamburger-box\">\n          <span className=\"hamburger-inner\"></span>\n        </span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbar-collapse-content\">\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item active\">\n            <a className=\"nav-link\" href=\"/portfolio\">\n              {\" \"}\n              About\n            </a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/portfolio\">\n              {\" \"}\n              Portfolio\n            </a>\n          </li>\n        </ul>\n      </div>\n*/\n","import React from \"react\";\nimport { Home, Portfolio } from \"./routes\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <div className=\"container pt-3 pb-2\">\n        <Home />\n      </div>\n      <div className=\"container mt-3 pt-3 pb-2\">\n        <Portfolio />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'jquery/dist/jquery.min.js';\nimport 'popper.js/dist/popper';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport './styles/styles.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<React.StrictMode>\n  <App/>\n</React.StrictMode>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}