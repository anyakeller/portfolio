{"version":3,"sources":["routes/Home.js","components/ProjectCard.js","components/ProjectSection.js","routes/Portfolio.js","routes/Contact.js","components/Nav.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","className","style","maxWidth","whiteSpace","src","alt","ProjectCard","projectData","class","project_name","img_file","dates","info","description","links","length","map","link","id","key","href","url","source","makeLinks","tags","tag","makeTags","ProjectSection","projects","project","Portfolio","Projects","Contact","Nav","to","data-toggle","type","data-target","aria-controls","aria-expanded","aria-label","exact","activeClassName","Header","location","useLocation","pathname","App","basename","process","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.93bf7df7.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Home(props) {\n  return (<div className=\"bg-gradient-light mx-auto shadow px-4 py-4\" style={{\n      maxWidth: \"690px\"\n    }}>\n    <div className=\"row\">\n      <div className=\"col-12 col-md-8 d-flex flex-column\">\n        <h1>\n          <small className=\"text-muted text-small mr-2 d-block d-sm-inline\">\n            a bit about\n          </small>\n          <span className=\"display-4\">Anya Keller</span>\n        </h1>\n        <p className=\"lead pl-2 mt-2\" style={{\n            whiteSpace: \"pre-line\"\n          }}>\n          Sometimes I write code.{'\\n'}\n          Sometimes I make things.{'\\n'}\n          Full-stack website developer{'\\n'}\n          Mechanical Engineering Undergraduate at Boston University\n        </p>\n      </div>\n      <div className=\"col mt-3 mt-md-2\">\n        <img className=\"d-block mx-auto img-fluid\" src=\"lathework.jpg\" alt=\"profile img\"/>\n        <small className=\"d-block text-center text-muted\">This might be my face</small>\n      </div>\n    </div>\n  </div>);\n}\n\nexport default Home;\n","import React from \"react\";\n\nfunction ProjectCard(props) {\n  const projectData = props.projectData;\n\n  function makeLinks() {\n    if (projectData.links.length > 0) {\n      return projectData.links.map((link, id) => {\n        return (\n          <a className=\"d-block\" key={id} href={link.url}>\n            {link.source}\n          </a>\n        );\n      });\n    }\n  }\n\n  function makeTags() {\n    if (projectData.info.tags.length > 0) {\n      return projectData.info.tags.map((tag, id) => {\n        return (\n          <span className=\"badge badge-pill badge-dark mr-1\" key={id}>\n            {tag}\n          </span>\n        );\n      });\n    }\n  }\n  return (\n    <div className=\"card shadow\">\n      <h5 class=\"card-header\">{projectData.project_name}</h5>\n      <div className=\"card-body\">\n        <img\n          className=\"card-img\"\n          src={\"project-media/\" + projectData.img_file}\n          alt=\"180x250 placeholder img\"\n        />\n        <small className=\"text-muted\">{projectData.dates}</small>\n        <p className=\"card-text\">{projectData.info.description}</p>\n        {makeLinks()}\n      </div>\n      <div className=\"card-footer\">{makeTags()}</div>\n    </div>\n  );\n}\n\nexport default ProjectCard;\n","import React from \"react\";\nimport ProjectCard from \"./ProjectCard.js\";\n\nexport default function ProjectSection(props){\n  return props.projects.map((project, id) => {\n      return (<ProjectCard key={id} projectData={project}/>);\n    });\n}","import React from \"react\";\nimport Projects from \"./../projects.json\";\nimport ProjectSection from \"./../components/ProjectSection.js\";\n\nfunction Portfolio(props) {\n  return (<div>\n    <div className=\"row\">\n      <div className=\"col\">\n        <div className=\"bg-gradient-light mx-auto shadow-sm px-4 py-4 clearfix\" style={{\n            maxWidth: \"690px\"\n          }}>\n          <div className=\"mb-3 mb-md-0\">\n            <h1>\n              <small className=\"text-muted text-small mr-2 d-block d-sm-inline\">\n                projects by\n              </small>\n              <span className=\"display-4\">Anya Keller</span>\n            </h1>\n            <p className=\"lead pl-2\" style={{\n                whiteSpace: \"pre-line\"\n              }}>\n              Some stuff I've made\n            </p>\n            <small className=\"text-muted float-right\">stuff</small>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div className=\"row my-4\">\n      <div className=\"col\">\n        <div className=\"card-columns\">\n          <ProjectSection projects={Projects}/>\n        </div>\n      </div>\n    </div>\n  </div>)\n}\n\nexport default Portfolio;\n","import React from \"react\";\n\nfunction Contact(props) {\n  return (<div>\n    <div className=\"row\">\n      <div className=\"col\">\n        <div className=\"bg-gradient-light mx-auto shadow-sm px-4 py-4 clearfix\" style={{\n            maxWidth: \"690px\"\n          }}>\n          <div className=\"mb-3 mb-md-0\">\n            <h1>\n              <small className=\"text-muted text-small mr-2 d-block d-sm-inline\">\n                \n              </small>\n              <span className=\"display-4\">Contact Me</span>\n            </h1>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div className=\"row mt-3\">\n      <div className=\"col\">\n        <div className=\"bg-gradient-light mx-auto shadow-lg px-4 py-4 clearfix\" style={{\n            maxWidth: \"400px\"\n          }}>\n          <div className=\"mb-3 mb-md-0\">\n            <h1 className=\"font-weight-light\">\n              Anya Keller\n            </h1>\n            <dl className=\"row\">\n              <dt className=\"col-sm-3\">Email</dt>\n              <dd className=\"col-sm-9\">alkeller@bu.edu</dd>\n\n              <dt className=\"col-sm-3\">Links</dt>\n              <dd className=\"col-sm-9\">\n                <a href=\"https://github.com/anyakeller\">Github</a><br/>\n                <a href=\"https://www.linkedin.com/in/anya-keller-7914b297/\">Linkedin</a>\n              </dd>\n            </dl>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>);\n}\n\nexport default Contact;\n","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nexport default function Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        Anya Keller\n      </Link>\n\n      <button\n        className=\"navbar-toggler hamburger collapsed hamburger--squeeze\"\n        data-toggle=\"collapse\"\n        type=\"button\"\n        data-target=\"#navbar-collapse-content\"\n        aria-controls=\"navbar-collapse-content\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\">\n        <span className=\"hamburger-box\">\n          <span className=\"hamburger-inner\"></span>\n        </span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbar-collapse-content\">\n        <div className=\"navbar-nav\">\n          <NavLink\n            exact={true}\n            to=\"/\"\n            className=\"nav-link\"\n            activeClassName=\"active\">\n            Home\n          </NavLink>\n          <NavLink\n            to=\"/portfolio\"\n            className=\"nav-link\"\n            activeClassName=\"active\">\n            Portfolio\n          </NavLink>\n          <NavLink to=\"/contact\" className=\"nav-link\" activeClassName=\"active\">\n            Contact\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n}\n","import React from \"react\";\nimport {useLocation, Link} from 'react-router-dom';\n\nfunction Header(props) {\n  const location = useLocation();\n  return (<header className=\"App-header px-2\">\n    <Link to={location.pathname}>\n      <small className=\"text-muted\">{location.pathname}</small>\n    </Link>\n  </header>);\n}\n\nexport default Header;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Home, Portfolio, Contact } from \"./routes\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  return (\n    <Router basename={`${process.env.PUBLIC_URL}/`}>\n      <div className=\"App\">\n        <Nav />\n        <Header />\n        <div className=\"container pt-3 pb-2\">\n          <Switch>\n            <Route exact={true} path=\"/\" component={Home}></Route>\n            <Route path=\"/portfolio\" component={Portfolio}></Route>\n            <Route path=\"/contact\" component={Contact}></Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'jquery/dist/jquery.min.js';\nimport 'popper.js/dist/popper';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport './styles/styles.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<React.StrictMode>\n  <App/>\n</React.StrictMode>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}