{"version":3,"sources":["routes/Home.js","components/ProjectCard.js","components/ProjectSection.js","components/ProjectDetailCarousel.js","components/ProjectDetail.js","routes/Portfolio.js","components/Nav.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","className","style","maxWidth","whiteSpace","href","download","src","process","alt","ProjectCard","projectData","onClick","handleProjectClick","role","dates","project_name","Image","image_folder_path","info","description","brief","ListGroup","Item","links","length","map","link","id","key","url","path","target","source","makeLinks","tags","tag","makeTags","ProjectSection","projects","project","ProjectDetailCarousel","imageFiles","Carousel","overflow","img_file","ProjectDetail","projectDetailModalShow","handleClose","Modal","size","show","onHide","Card","Header","closeButton","selectedProject","Body","Title","Container","fluid","Row","Col","lg","image_files","verbose","paragraph","Footer","Portfolio","useState","setProjectDetailModalShow","Projects","setSelectedProject","projectDetails","Nav","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4c8eb416.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Home(props) {\n\n  return (\n    <div\n      className=\"bg-gradient-light mx-auto shadow-sm px-4 py-4\"\n      style={{\n        maxWidth: \"690px\"\n      }}>\n      <div className=\"row\">\n        <div className=\"col-12 col-md-8 d-flex flex-column\">\n          <h1>\n            <small className=\"text-muted text-small mr-2 d-block d-sm-inline\">\n              a bit about\n            </small>\n            <span className=\"display-5\"> Anya Keller</span>\n          </h1>\n          <p\n            className=\"lead pl-2 mt-2\"\n            style={{\n              whiteSpace: \"pre-line\"\n            }}>\n            Sometimes I make things.{\"\\n\"}\n            Sometimes I design things.{\"\\n\"}\n            Sometimes I write code.{\"\\n\"}\n            {\"\\n\"}\n            Mechanical Engineering Undergraduate at Boston University{\"\\n\"}\n            Full-stack website developer{\"\\n\"}\n          </p>\n          <span className=\"d-flex justify-content-around text-center\">\n            <a href=\"Anya%20Keller%20BU%20Resume.pdf\" download>\n              <i className=\"fa-solid fa-file-arrow-down\"></i> Resume\n            </a>\n            <a href=\"https://github.com/anyakeller\">\n              <i className=\"fa-brands fa-github\"></i> Github\n            </a>\n            <a href=\"https://www.linkedin.com/in/anya-keller-7914b297/\">\n              <i className=\"fa-brands fa-linkedin\"></i> Linkedin\n            </a>\n          </span>\n        </div>\n        <div className=\"col d-flex flex-column justify-content-center px-5 px-md-1 mt-3 mt-md-2\">\n          <img\n            className=\"d-block mx-auto img-fluid\"\n            src={process.env.PUBLIC_URL + \"/lathework.jpg\"}\n            alt=\"profile img\"\n          />\n          <small className=\"d-block text-center text-muted\">\n            This might be my face\n          </small>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport Image from \"react-bootstrap/image\";\nimport \"../styles/projectcard-styles.css\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nfunction ProjectCard(props) {\n  const projectData = props.projectData;\n\n  function makeLinks() {\n    if (projectData.links.length > 0) {\n      return projectData.links.map((link, id) => {\n        return (\n          <a\n            className=\"d-block pb-1\"\n            key={id}\n            href={\n              link.url\n                ? link.url\n                : process.env.PUBLIC_URL +\n                  \"/project-media/\" +\n                  projectData.image_folder_path +\n                  link.path\n            }\n            target=\"_blank\">\n            {link.source}\n          </a>\n        );\n      });\n    }\n  }\n\n  function makeTags() {\n    if (projectData.info.tags.length > 0) {\n      return projectData.info.tags.map((tag, id) => {\n        return (\n          <span className=\"badge rounded-pill bg-dark me-1\" key={id}>\n            {tag}\n          </span>\n        );\n      });\n    }\n  }\n\n  return (\n    <div className=\"col my-1\">\n      <div\n        className=\"card shadow h-100 project-card\"\n        onClick={() => props.handleProjectClick(projectData)}\n        role=\"button\">\n        <small className=\"card-header text-center\"> {projectData.dates}</small>\n\n        <div className=\"card-body\">\n          <h5 className=\"card-title text-center mb-3\">\n            {projectData.project_name}\n          </h5>\n          <Image\n            className=\"card-img\"\n            src={\n              process.env.PUBLIC_URL +\n              \"/project-media/\" +\n              projectData.image_folder_path +\n              projectData[\"image_files\"][0]\n            }\n            alt={projectData[\"image_files\"][0]}\n          />\n          <p className=\"card-text mt-4\">{projectData.info.description.brief}</p>\n        </div>\n        <ul className=\"list-group list-group-flush\">\n          <ListGroup.Item>{makeLinks()}</ListGroup.Item>\n        </ul>\n        <div className=\"card-footer\">{makeTags()}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProjectCard;\n","import React from \"react\";\nimport ProjectCard from \"./ProjectCard.js\";\n\nexport default function ProjectSection(props) {\n\n  return props.projects.map((project, id) => {\n    return <ProjectCard key={id} projectData={project} handleProjectClick={props.handleProjectClick}/>;\n  });\n}\n","import React from \"react\";\nimport { Image } from \"react-bootstrap\";\nimport Carousel from \"react-bootstrap/Carousel\";\n\nexport default function ProjectDetailCarousel(props) {\n  const imageFiles = props.imageFiles;\n  const image_folder_path = props.image_folder_path;\n\n  function makeSlides() {\n    return imageFiles.map((img_file, id) => {\n      return (\n        <Carousel.Item key={id}>\n          <Image\n            className=\"d-block w-100\"\n            src={\n              process.env.PUBLIC_URL +\n              \"/project-media/\" +\n              image_folder_path +\n              img_file\n            }\n            alt=\"First slide\"\n          />\n        </Carousel.Item>\n      );\n    });\n  }\n\n  if (imageFiles.length > 0)\n    return (\n      <Carousel className=\"rounded\" style={{ overflow: \"hidden\" }}>\n        {makeSlides()}\n      </Carousel>\n    );\n  else\n    return (\n      <Image\n        className=\"card-img\"\n        src={\n          process.env.PUBLIC_URL +\n          \"/project-media/\" +\n          image_folder_path +\n          imageFiles[0]\n        }\n        alt={imageFiles[0]}\n      />\n    );\n}\n","import React from \"react\";\nimport { Modal, Container, Row, Col } from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport ProjectDetailCarousel from \"./ProjectDetailCarousel.js\";\n\nfunction ProjectDetail(props) {\n  const projectDetailModalShow = props.projectDetailModalShow;\n  const handleClose = props.handleClose;\n\n  function makeParagraphs() {\n    return props.selectedProject.info.description.verbose.map(\n      (paragraph, id) => {\n        return <p key={id}>{paragraph}</p>;\n      }\n    );\n  }\n\n  function makeLinks() {\n    if (props.selectedProject.links.length > 0) {\n      return props.selectedProject.links.map((link, id) => {\n        return (\n          <a className=\"d-block\" key={id} href={link.url} target=\"_blank\">\n            {link.source}\n          </a>\n        );\n      });\n    }\n  }\n\n  function makeTags() {\n    if (props.selectedProject.info.tags.length > 0) {\n      return props.selectedProject.info.tags.map((tag, id) => {\n        return (\n          <span className=\"badge rounded-pill bg-dark me-1\" key={id}>\n            {tag}\n          </span>\n        );\n      });\n    }\n  }\n\n  return (\n    <Modal size=\"lg\" show={projectDetailModalShow} onHide={handleClose}>\n      <Card>\n        <Modal.Header closeButton className=\"py-2\">\n          <small className=\"text-muted\">{props.selectedProject.dates}</small>\n        </Modal.Header>\n        <Modal.Body>\n          <Modal.Title className=\"text-center\">{props.selectedProject.project_name}</Modal.Title>\n          <Container fluid>\n            <Row>\n              <Col>\n                <p> {props.selectedProject.info.description.brief}</p>\n              </Col>\n            </Row>\n            <Row className=\"align-items-center justify-content-center\">\n              <Col lg={8}>\n                <ProjectDetailCarousel\n                  imageFiles={props.selectedProject.image_files}\n                  image_folder_path={props.selectedProject.image_folder_path}\n                />\n              </Col>\n            </Row>\n            <Row>\n              <Col className=\"text-center\"></Col>\n            </Row>\n            <Row>\n              <Col className=\"pt-4\">{makeParagraphs()}</Col>\n            </Row>\n            <Row className=\"pt-1\">\n              <Col>{makeLinks()}</Col>\n            </Row>\n          </Container>\n        </Modal.Body>\n        <Modal.Footer className=\"justify-content-center\">\n          {makeTags()}\n        </Modal.Footer>\n      </Card>\n    </Modal>\n  );\n}\n\nexport default ProjectDetail;\n","import React, { useState } from \"react\";\nimport Projects from \"./../projects.json\";\nimport ProjectSection from \"./../components/ProjectSection.js\";\nimport ProjectDetail from \"./../components/ProjectDetail.js\";\n\nfunction Portfolio(props) {\n  const [projectDetailModalShow, setProjectDetailModalShow] = useState(false);\n  const [selectedProject, setSelectedProject] = useState(Projects[0]);\n  const handleProjectClick = (projectDetails) => {\n    setProjectDetailModalShow(true);\n    setSelectedProject(projectDetails);\n  };\n  const handleClose = () => setProjectDetailModalShow(false);\n\n  return (\n    <div>\n\n      <ProjectDetail handleClose={handleClose} projectDetailModalShow={projectDetailModalShow} selectedProject={selectedProject}/>\n\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"bg-gradient-light mx-auto shadow px-4 py-4 my-2 clearfix\"\n            style={{\n              maxWidth: \"690px\"\n            }}>\n            <div className=\"mb-3 mb-md-0\">\n              <h1>\n                <span className=\"display-4\">Projects</span>\n              </h1>\n              <p\n                className=\"lead pl-2\"\n                style={{\n                  whiteSpace: \"pre-line\"\n                }}>\n                Click a project tile for details\n              </p>\n              <small className=\"text-muted float-right\">This website is a work in progress and the interface is a bit wonky. <a href=\"https://github.com/anyakeller/portfolio\"> I'd appretiate any suggestions!</a></small>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row row-cols-1 row-cols-sm-2 row-cols-lg-3\">\n        <ProjectSection projects={Projects} handleProjectClick={handleProjectClick}/>\n      </div>\n    </div>\n  );\n}\n\nexport default Portfolio;\n","import React from \"react\";\n\nexport default function Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"/portfolio\">\n          Anya Keller\n        </a>\n      </div>\n    </nav>\n  );\n}","import React from \"react\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"bg-dark text-light py-2\">\n      <div className=\"row mx-0\">\n        <div className=\"col text-center\">\n          <small>\n            <a href=\"https://github.com/anyakeller/portfolio\">\n              View Source Code\n            </a>\n          </small>\n        </div>\n        <div className=\"col text-center\">\n          <small>Built with React.js</small>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","import React from \"react\";\nimport { Home, Portfolio } from \"./routes\";\nimport Nav from \"./components/Nav\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Nav />\n\n      <div className=\"container pt-3 pb-2\">\n        <Home />\n      </div>\n      <div className=\"container mt-3 pt-3 pb-2 mb-4\">\n        <Portfolio />\n      </div>\n      <div className=\"container-fluid px-0\">\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"jquery/dist/jquery.min.js\";\n// import 'popper.js/dist/popper';\n// import 'bootstrap/dist/js/bootstrap.min.js';\nimport \"./styles/styles.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}